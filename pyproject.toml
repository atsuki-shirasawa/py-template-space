[tool.poetry]
name = "py-template-space"
version = "0.1.0"
description = ""
authors = ["Atsuki Shirasawa"]
license = "MIT License"
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.3"


[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
mypy = "^1.2.0"
ruff = "^0.0.263"
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-datadir = "^1.4.1"
tox = "^4.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.black]
line-length = 79

[tool.ruff]
line-length = 79
select = [
    "E",    # pycodestype error
    "W",    # pycodestyle warning
    "F",    # pyflakes
    "C90",  # mccabe
    "I",    # isort
    "D",    # pydocstyle
    "B",    # flake8-bugbear
    "COM",  # flake8-commas
    "S",    # flake8-bandit 
    "PTH",  # flake8-use-pathlib 
]
ignore = [
    "D415", # pydocstyle about First line should end with a '.' , '?' or '!'
    "E501", # line too long, handled by black
]
unfixable = [
    "F401", # disable auto-fix for unused-imports
    "F841", # disable auto-fix for unused-variable
]
target-version = "py39"

[tool.ruff.per-file-ignores]
# ignore assert error only in unnit-test
"*test_*.py" = ["S101"] 
"*_test.py" = ["S101"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.mccabe]
max-complexity = 10
